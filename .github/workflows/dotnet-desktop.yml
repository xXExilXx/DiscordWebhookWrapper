name: .NET Core Desktop

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest

    env:
      Solution_Name: ./DiscordWebhookWrapper.sln
      Test_Project_Path: ./DiscordWebhookWrapper.csproj

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    - name: Execute unit tests
      run: dotnet test

    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Create the app package
      run: msbuild $env:Solution_Name /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}  # Use tag_name instead of tag
        name: Release v${{ github.run_number }}  # Release name
        body: |
          ## Release Notes
          - Built on ${{ github.run_id }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}  # Use tag_name for the uploaded files
        files: ./output/**  # Adjust the path based on your output location
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
